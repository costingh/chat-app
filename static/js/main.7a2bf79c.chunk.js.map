{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/index.js","actions/types.js","store.js","services/auth-header.js","utils/baseUrl.js","services/auth.service.js","components/Login.js","actions/auth.js","components/Register.js","services/user.service.js","components/Profile.js","common/EventBus.js","services/conversations.service.js","services/messages.service.js","components/AddNewContact.js","components/MessageList.js","utils/utils.js","components/ChatContent.js","components/ChatInfos.js","components/Chat.js","components/BoardUser.js","helpers/history.js","common/AuthVerify.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","authHeader","accessToken","Authorization","API_URL","BASE_URL","username","email","password","axios","post","then","response","data","setItem","stringify","removeItem","get","headers","userId","status","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","useSelector","dispatch","useDispatch","to","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","Promise","resolve","error","toString","reject","login","history","push","window","location","reload","catch","ref","htmlFor","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","Profile","currentUser","substring","substr","id","roles","map","index","key","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","conversation","conversationId","delete","AddNewContact","showAddContactForm","onClick","MessageList","currentChatContact","setCurrentChatContact","setCurrentConversation","hideAddContactForm","contactForm","onlineUsersIds","inputRef","filteredList","setFilteredList","allUsersList","setAllUsersList","conversations","setConversations","contacts","setContacts","realTimeContacts","setRealTimeContacts","useEffect","timeout","timeout0","setTimeout","contactList","contact","includes","UserService","resp","console","log","updatedContact","clearTimeout","ConversationsService","err","users","changeActiveUser","querySelector","classList","add","currentConversationId","url","URL","href","searchParams","set","pushState","addQueryParam","getNewContactDetails","participant","allContacts","a","participantId","participantOneId","participantTwoId","userResponse","MessagesService","messageResponse","lastMessage","conv","cursor","marginBottom","xmlns","width","height","viewBox","d","body","contains","fill","placeholder","autoComplete","filteredUsers","filter","toLowerCase","startsWith","newContact","find","alert","newConversation","addToContacts","profilePicture","marginTop","textAlign","getQueryParam","ChatContent","messages","setMessages","sendMessage","currentConversation","logOut","messageRef","chat","innerWidth","data-online","profile","clientWidth","cx","cy","r","from","newMessage","ChatInfos","socialMedias","social","link","activities","activity","padding","borderRadius","background","color","maxWidth","margin","Chat","useHistory","CONNECTED_USER","description","setContactForm","setOnlineUsersIds","ws","stomp","messagesSubscriptions","SockJS","Stomp","over","reconnect_delay","connect","frame","connectedUser","send","onlineContactsSubscription","subscribe","connectAction","offlineContactsSubscription","disconnectAction","onlineUser","newMessagesSubscription","chatActions","close","onbeforeunload","disconnectedUser","disconnect","subscription","unsubscribe","EventBus","BoardUser","showChat","setShowChat","_content","createBrowserHistory","AuthVerify","listen","token","atob","split","parseJwt","exp","Date","now","App","setShowModeratorBoard","setShowAdminBoard","useCallback","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a2bf79c.chunk.js","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // For Spring Boot back-end\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n\r\n    // for Node.js Express back-end\r\n    // return { \"x-access-token\": user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","export default \"https://chat-app-spring-boot.herokuapp.com/\"","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport BASE_URL from '../utils/baseUrl';\r\n\r\nconst API_URL = BASE_URL + \"api/auth/\";\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getAllUsers = () => {\r\n  return axios.get(API_URL + \"all\", { headers: authHeader() });\r\n};\r\n\r\nconst getUser = (userId) => {\r\n  return axios.get(API_URL + `user/${userId}`, { headers: authHeader() });\r\n};\r\n\r\nconst updateStatus = (userId, status) => {\r\n  return axios.post(API_URL + `user/update-status`, {userId, status});\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getAllUsers,\r\n  getUser,\r\n  updateStatus\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { login } from \"../actions/auth\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  const { message } = useSelector(state => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(login(username, password))\r\n        .then(() => {\r\n          props.history.push(\"/chat-app/\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/chat-app/chat\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <p>New member?</p>\r\n          <Link to={\"/chat-app/register\"}>\r\n            Sign up now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { register } from \"../actions/auth\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const { message } = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(register(username, email, password))\r\n        .then(() => {\r\n          setSuccessful(true);\r\n        })\r\n        .catch(() => {\r\n          setSuccessful(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n        <div className=\"text-center\">\r\n          <p>Already have an account?</p>\r\n          <Link to={\"/chat-app/login\"}>\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport BASE_URL from '../utils/baseUrl';\r\n\r\nconst API_URL = BASE_URL + \"api/test/\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"all\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n};","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Profile = () => {\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/chat-app/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.username}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport BASE_URL from '../utils/baseUrl';\r\n\r\nconst API_URL = BASE_URL + \"api/conversation/\";\r\n\r\nconst createConversation = (conversation) => {\r\n  return axios.post(API_URL + \"add\", conversation, { headers: authHeader() });\r\n};\r\n\r\nconst getAUserConversations = (userId) => {\r\n  return axios.get(API_URL + `all/${userId}`, { headers: authHeader() });\r\n};\r\n\r\nconst getAllConversations = () => {\r\n  return axios.get(API_URL + 'all', { headers: authHeader() });\r\n};\r\n\r\nconst getConversation = (conversationId) => {\r\n  return axios.get(API_URL + `${conversationId}`, { headers: authHeader() });\r\n};\r\n\r\nconst deleteConversation = (conversationId) => {\r\n  return axios.delete(API_URL + `delete/${conversationId}`, { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n    createConversation,\r\n    getAUserConversations,\r\n    getAllConversations,\r\n    getConversation,\r\n    deleteConversation\r\n};","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport BASE_URL from '../utils/baseUrl';\r\n\r\nconst API_URL = BASE_URL + \"api/messages/\";\r\n\r\nconst getAllMessagesFromConversation = (conversationId) => {\r\n  return axios.get(API_URL + `all-messages/${conversationId}`, { headers: authHeader() });\r\n};\r\n\r\nconst getLastMessageFromConversation = (conversationId) => {\r\n  return axios.get(API_URL + `last-message/${conversationId}`, { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n    getAllMessagesFromConversation,\r\n    getLastMessageFromConversation\r\n};","import React from 'react'\r\n\r\nfunction AddNewContact({showAddContactForm}) {\r\n    return (\r\n        <div className=\"add_contact--btn\" onClick={showAddContactForm}>Add new contact </div>\r\n    )\r\n}\r\n\r\nexport default AddNewContact\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport AuthService from \"../services/auth.service\"\r\nimport ConversationsService from \"../services/conversations.service\"\r\nimport MessagesService from '../services/messages.service';\r\nimport UserService from '../services/auth.service';\r\nimport AddNewContact from './AddNewContact';\r\n\r\nfunction MessageList({currentChatContact, setCurrentChatContact, currentUser, setCurrentConversation, hideAddContactForm, contactForm, showAddContactForm, onlineUsersIds}) {\r\n    const inputRef = useRef();\r\n\r\n    const [filteredList, setFilteredList] = useState([]);\r\n    const [allUsersList, setAllUsersList] = useState([]);\r\n    const [conversations, setConversations] = useState([]);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [realTimeContacts, setRealTimeContacts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(contacts.length !== 0) {\r\n            setRealTimeContacts(contacts)\r\n        }\r\n    }, [contacts])\r\n\r\n    useEffect(() => {\r\n        let timeout;\r\n        const timeout0 = setTimeout(() => {\r\n            const contactList = [];\r\n\r\n            contacts.map(contact => {\r\n                if(contact.status === 'online') {\r\n                    if(onlineUsersIds.includes(contact.id)) {\r\n                        contactList.push(contact)\r\n                       // console.log('User is online and in array')\r\n                    }\r\n                    else {\r\n                        // console.log('User is only but not in array')\r\n                        contactList.push(contact)\r\n                    }\r\n                } else {\r\n                    if(!onlineUsersIds.includes(contact.id)) {\r\n                        // console.log('User is offline but not in array')\r\n                        contactList.push(contact)   \r\n                    }\r\n                    else {\r\n                        // console.log('User is offline but in array')\r\n                        UserService.updateStatus(contact.id, 'online')\r\n                            .then((resp) => console.log(resp))\r\n\r\n                        let updatedContact = {...contact};\r\n                        updatedContact.status = 'online'\r\n                        contactList.push(updatedContact)\r\n                    }\r\n                }\r\n            })\r\n            \r\n            timeout = setTimeout(() => {\r\n                setRealTimeContacts(contactList);\r\n            }, 1000)\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n            clearTimeout(timeout0);\r\n        }\r\n    }, [onlineUsersIds, contacts])\r\n\r\n    useEffect(() => {\r\n        ConversationsService.getAUserConversations(currentUser.id)\r\n            .then((resp) => {setConversations(resp.data)})\r\n            .catch((err) => console.log(err))\r\n    }, [currentUser.id])\r\n\r\n    useEffect(() => {\r\n        if(contactForm) {\r\n            AuthService.getAllUsers()\r\n                .then((users) => {\r\n                    setAllUsersList(users.data)\r\n                    setFilteredList(users.data)\r\n                })\r\n                .catch((err) => console.log(err))\r\n        }\r\n    }, [contactForm])\r\n\r\n    const addQueryParam = (key, value) => {\r\n        const url = new URL(window.location.href);\r\n        url.searchParams.set(key, value);\r\n        window.history.pushState({}, '', url.toString());\r\n    };\r\n\r\n    const changeActiveUser = (user) => {\r\n        const chat = document.querySelector('.chat');\r\n        chat.classList.add('chat--show')\r\n\r\n        setCurrentChatContact(user);\r\n        const currentConversationId = user.conversationId;\r\n        setCurrentConversation(currentConversationId);\r\n        addQueryParam('conversation', currentConversationId);\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        if(contactForm && event.target.value !== '') {\r\n            const filteredUsers = allUsersList.filter(user => user.username.toLowerCase().startsWith(event.target.value.toLowerCase()));\r\n            setFilteredList(filteredUsers)\r\n        }\r\n        if(event.target.value === '') setFilteredList(allUsersList)\r\n    }\r\n\r\n    const addToContacts = (newContact) => {\r\n        const found = contacts.find(contact => contact.id === newContact.id);\r\n        if(found) {\r\n            alert('Contact already exists!');\r\n            return;\r\n        }\r\n        else {\r\n            const newConversation = {\r\n                participantOneId: currentUser.id,\r\n                participantTwoId: newContact.id\r\n            };\r\n\r\n            // create a new conversation\r\n            // this request retrieves an object with fields: id, participantOneId, participantTwoId, createdAt\r\n            ConversationsService.createConversation(newConversation)\r\n                .then((newConversation) => {\r\n                    // get the new contact user, to be displayed in messageList component\r\n                    // thi user id is participantTwoId\r\n                    UserService.getUser(newConversation.data.participantTwoId)\r\n                        .then((user) => {\r\n                            // add the conversationId field to the new user\r\n                            // then add it to state (no need to refresh the page to display new added contact)\r\n                            const newContact = {\r\n                                conversationId: newConversation.data.id,\r\n                                ...user.data\r\n                            }\r\n                            setContacts(contacts => [...contacts, newContact])\r\n                        }) \r\n                        .catch((err) => console.log(err))\r\n                }) \r\n                .catch((err) => console.log(err))\r\n    \r\n            hideAddContactForm()\r\n            inputRef.current.value = ''\r\n        }\r\n    }\r\n\r\n    const getNewContactDetails = async (conversation, participant, allContacts) => {\r\n        let participantId = participant === 'one' ? conversation.participantOneId : conversation.participantTwoId;\r\n        try {\r\n          const user = AuthService.getUser(participantId);\r\n          user.then((userResponse) => {\r\n            const lastMessage = MessagesService.getLastMessageFromConversation(conversation.id);\r\n            lastMessage.then((messageResponse) => {\r\n                allContacts.push({\r\n                    ...userResponse.data,\r\n                    conversationId: conversation.id,\r\n                    lastMessage: messageResponse.data\r\n                }) \r\n            })\r\n          })\r\n        } catch (err) {\r\n          console.log('Could not retrieve information!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(conversations.length !== 0) {\r\n            const allContacts = [];\r\n            conversations.map((conv) => {\r\n                if(conv.participantOneId !== currentUser.id) getNewContactDetails(conv, 'one', allContacts)\r\n                else getNewContactDetails(conv, 'two', allContacts)\r\n            })\r\n\r\n            const timeout = setTimeout(() => {\r\n                setContacts(allContacts);\r\n            }, 1000)        \r\n            \r\n            return () => {\r\n                clearTimeout(timeout);\r\n            }\r\n        }\r\n    }, [conversations, currentUser.id])\r\n\r\n    const toggleDarkMode = () => {\r\n        const body = document.querySelector('body');\r\n        if( body.classList.contains('dark-mode')) {\r\n            body.classList.remove('dark-mode')\r\n        } else {\r\n            body.classList.add('dark-mode')\r\n        }\r\n    }\r\n\r\n    /* onlineUsersIds.find(id => contact.id === id)  */\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-4 col-lg-5 col-xl-3 px-0 messages-page__list-scroll\">\r\n            <div className=\"messages-page__header mb-0 px-4 pt-3 pb-3\">\r\n                <span className=\"messages-page__title\">\r\n                    {contactForm \r\n                        ? <div style={{ cursor: 'pointer'}} onClick={hideAddContactForm}>\r\n                            <svg style={{marginBottom: '3px'}} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"/></svg> Go Back\r\n                        </div>\r\n                        : currentUser.username\r\n                    }\r\n                </span>\r\n                <div className=\"messages-page__dark-mode-toogler\" onClick={toggleDarkMode}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon svg-icon--dark-mode\" viewBox=\"0 0 49.7 49.7\">\r\n                        <path d=\"M25.4,49.7A25.6,25.6,0,0,1,1.3,32.3,25.6,25.6,0,0,1,17.3.1a2,2,0,0,1,2.1.5,2.2,2.2,0,0,1,.5,2.1,19.9,19.9,0,0,0-1.2,6.8A21,21,0,0,0,25,24.7,21,21,0,0,0,40.2,31h0a20.9,20.9,0,0,0,6.9-1.2,2,2,0,0,1,2.5,2.5,25.8,25.8,0,0,1-16,16.1A28.7,28.7,0,0,1,25.4,49.7ZM15,5.5A21.4,21.4,0,0,0,5.1,31.1,21.5,21.5,0,0,0,15.9,43.4a21.2,21.2,0,0,0,28.3-8.8,17.5,17.5,0,0,1-4,.4h0a24.9,24.9,0,0,1-18-7.5,24.9,24.9,0,0,1-7.5-18A26.9,26.9,0,0,1,15,5.5Z\" fill=\"#f68b3c\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div className=\"messages-page__search mb-0 px-3 pb-3\">\r\n                <div className=\"custom-form__search-wrapper\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control custom-form\" \r\n                        id=\"search\" \r\n                        placeholder={`${contactForm  ? 'Search for a user...' : 'Find a user or a message…'}`} \r\n                        autoComplete=\"off\"\r\n                        onChange={handleInputChange}    \r\n                        ref={inputRef}\r\n                    />\r\n                    <button type=\"submit\" className=\"custom-form__search-submit\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon svg-icon--search\" viewBox=\"0 0 46.6 46.6\">\r\n                            <path d=\"M46.1,43.2l-9-8.9a20.9,20.9,0,1,0-2.8,2.8l8.9,9a1.9,1.9,0,0,0,1.4.5,2,2,0,0,0,1.5-.5A2.3,2.3,0,0,0,46.1,43.2ZM4,21a17,17,0,1,1,33.9,0A17.1,17.1,0,0,1,33,32.9h-.1A17,17,0,0,1,4,21Z\" fill=\"#f68b3c\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <ul className=\"messages-page__list pb-5 px-1 px-md-3\">\r\n                {\r\n                    contactForm \r\n                        ? filteredList.map((user) => {\r\n                            return  <li \r\n                                        key={user.id}\r\n                                        className={`\r\n                                            messaging-member messaging-member--new \r\n                                            ${user.status === 'online' \r\n                                                ? 'messaging-member--online' \r\n                                                : ''} \r\n                                            ${currentChatContact && \r\n                                                currentChatContact.id === user.id \r\n                                                    ? 'messaging-member--active' \r\n                                                    : ''}`}\r\n                                        onClick={() => addToContacts(user)}\r\n                                    >\r\n                                        <div className=\"messaging-member__wrapper\">\r\n                                            <div className=\"messaging-member__avatar\">\r\n                                                <img src={user.profilePicture ? user.profilePicture : '/chat-app/avatar_placeholder.png'} alt={user.username} loading=\"lazy\"/>\r\n                                                <div className=\"user-status\"></div>\r\n                                            </div>\r\n                                            <span className=\"messaging-member__name\">{user.username}</span>\r\n                                            <span className=\"messaging-member__message\">Click to add user to contact list!</span>\r\n                                        </div>\r\n                                    </li>\r\n                        })\r\n                        : realTimeContacts.length === 0\r\n                            ? <div>\r\n                                <div style={{marginTop: '10px', textAlign: 'center'}}>No conversations yet...</div>\r\n                                <AddNewContact showAddContactForm={showAddContactForm}/>\r\n                            </div>\r\n                            : realTimeContacts.map(contact => {\r\n                                return  <li \r\n                                            key={contact.id}\r\n                                            className={`\r\n                                                messaging-member \r\n                                                ${contact.status === 'online'\r\n                                                    ? 'messaging-member--online' \r\n                                                    : ''} \r\n                                                ${currentChatContact && \r\n                                                    currentChatContact.id === contact.id \r\n                                                        ? 'messaging-member--active' \r\n                                                        : ''}`} // add  messaging-member--new if has new message\r\n                                            onClick={() => changeActiveUser(contact)}\r\n                                        >\r\n                                            <div className=\"messaging-member__wrapper\">\r\n                                                <div className=\"messaging-member__avatar\">\r\n                                                    <img src={contact.profilePicture ? contact.profilePicture : '/chat-app/avatar_placeholder.png'} alt={contact.username} loading=\"lazy\"/>\r\n                                                    <div className=\"user-status\"></div>\r\n                                                </div>\r\n                                                <span className=\"messaging-member__name\">{contact.username}</span>\r\n                                                <span className=\"messaging-member__message\">{contact?.lastMessage?.body ? contact?.lastMessage?.body : 'No messages yet'}</span>\r\n                                            </div>\r\n                                        </li>\r\n                        })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageList\r\n","export const getQueryParam = (key) => {\r\n    const url = new URL(window.location.href);\r\n    return url.searchParams.get(key) || '';\r\n};\r\n\r\nexport default {\r\n    getQueryParam,\r\n}","import React, {useRef, useState, useEffect} from 'react'\r\nimport {getQueryParam} from '../utils/utils'\r\nimport MessagesService from '../services/messages.service'\r\n\r\nfunction ChatContent({messages, setMessages, sendMessage, currentUser, currentChatContact, currentConversation, logOut}) {\r\n    const messageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        // get all messages from this conversation : currentConversation\r\n        MessagesService.getAllMessagesFromConversation(currentConversation)\r\n            .then((resp) => setMessages(resp.data))\r\n            .catch((err) => console.log(err))\r\n    }, [currentConversation])\r\n    \r\n    const send = () => {\r\n        if(messageRef.current.value && currentChatContact) {\r\n            const conversationId = getQueryParam('conversation');\r\n            if(conversationId) {\r\n                const newMessage = {\r\n                    conversationId: conversationId,\r\n                    from: currentUser.id,\r\n                    to: currentChatContact.id,\r\n                    body: messageRef.current.value\r\n                }\r\n                sendMessage(newMessage);\r\n                messageRef.current.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    const showChatDetails = () => {\r\n        const profile = document.querySelector('.user-profile');\r\n        const body = document.querySelector('body');\r\n        if(body.clientWidth <= 1199) {\r\n            profile.classList.add('user-profile--large');\r\n            profile.classList.add('user-profile--show');\r\n        }\r\n    }\r\n\r\n    const chatPrevious = () => {\r\n        const chat = document.querySelector('.chat');\r\n\t\tchat.classList.remove('chat--show');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const chat = document.querySelector('.chat');\r\n        if(window.innerWidth <= 764) chat.classList.add('chat--mobile'); \r\n        else chat.classList.remove('chat--mobile');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const chat = document.querySelector('.chat');\r\n            if(window.innerWidth <= 764) chat.classList.add('chat--mobile'); \r\n            else chat.classList.remove('chat--mobile');\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n    })\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat col-12 col-md-8 col-lg-7 col-xl-6 px-0 pl-md-1\" style={{display: 'block'}}>\r\n            <div className=\"chat__container\">\r\n                <div className=\"chat__wrapper py-2 pt-mb-2 pb-md-3\">\r\n                    <div className={`chat__messaging ${currentChatContact && currentChatContact?.status === 'online' && 'messaging-member--online '} pb-2 pb-md-2 pl-2 pl-md-4 pr-2`}>\r\n                        <div className=\"chat__previous d-flex d-md-none\" onClick={chatPrevious}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon svg-icon--previous\" viewBox=\"0 0 45.5 30.4\">\r\n                                <path d=\"M43.5,13.1H7l9.7-9.6A2.1,2.1,0,1,0,13.8.6L.9,13.5h0L.3,14v.6c0,.1-.1.1-.1.2v.4a2,2,0,0,0,.6,1.5l.3.3L13.8,29.8a2.1,2.1,0,1,0,2.9-2.9L7,17.2H43.5a2,2,0,0,0,2-2A2.1,2.1,0,0,0,43.5,13.1Z\" fill=\"#f68b3c\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"chat__notification d-flex d-md-none chat__notification--new\">\r\n                            <span>1</span>\r\n                        </div>\r\n                        <div className=\"chat__infos pl-2 pl-md-0\">\r\n                            <div className=\"chat-member__wrapper\" data-online=\"true\">\r\n                                <div className=\"chat-member__avatar\">\r\n                                    <img src={!currentChatContact?.profilePicture && '/chat-app/avatar_placeholder.png'} alt={currentChatContact && currentChatContact.username} loading=\"lazy\"/>\r\n                                    <div className=\"user-status user-status--large\"></div>\r\n                                </div>\r\n                                <div className=\"chat-member__details\">\r\n                                    <span className=\"chat-member__name\">{currentChatContact ? currentChatContact.username : 'John Doe'}</span>\r\n                                    <span className=\"chat-member__status\">{currentChatContact ? currentChatContact?.status : 'Offline'}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"chat__actions mr-2 \">\r\n                            <ul className=\"m-0\">\r\n                                <li>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon\" viewBox=\"0 0 24 24\" onClick={logOut}>\r\n                                        <path d=\"M10 2v2h12v16h-12v2h14v-20h-14zm0 7.408l2.963 2.592-2.963 2.592v-1.592h-8v-2h8v-1.592zm-2-4.408v4h-8v6h8v4l8-7-8-7z\"/>\r\n                                    </svg>\r\n                                </li>\r\n                                <li>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon\" viewBox=\"0 0 48 48\">\r\n                                        <path d=\"M38.4,48c-2.1,0-5.1-.8-9.5-3.2a62.9,62.9,0,0,1-14.6-11A61.7,61.7,0,0,1,3.2,19C-.9,11.8-.3,8.5.7,6.4A9.7,9.7,0,0,1,4.8,2,21.1,21.1,0,0,1,7.8.4h.3c1.8-.7,3-.3,4.9,1.5h.1a40.1,40.1,0,0,1,5.4,8.2c1.3,2.6,1.6,4.3-.2,6.9l-.5.6c-.8,1-.8,1.2-.8,1.6s1.9,3.4,5.2,6.7S28,30.8,28.8,31s.6,0,1.6-.8l.7-.4c2.5-1.9,4.2-1.6,6.8-.3A40.6,40.6,0,0,1,46.1,35h.1c1.8,1.9,2.2,3.1,1.5,4.9v.2h0a21.1,21.1,0,0,1-1.6,3,10,10,0,0,1-4.3,4.1A7.7,7.7,0,0,1,38.4,48ZM9.5,4.1H9.2L6.9,5.4H6.8A6.3,6.3,0,0,0,4.3,8.1c-.3.7-1.2,2.6,2.4,9A58.9,58.9,0,0,0,17.1,30.9,58.2,58.2,0,0,0,30.9,41.3c6.4,3.6,8.4,2.7,9.1,2.4a6.7,6.7,0,0,0,2.5-2.5.1.1,0,0,0,.1-.1c.5-.8.9-1.6,1.3-2.4v-.2l-.5-.6a35.4,35.4,0,0,0-7.3-4.8c-1.7-.8-1.8-.8-2.7-.1l-.6.4A5.3,5.3,0,0,1,28,34.9c-2.9-.6-7.4-4.9-8.7-6.2s-5.6-5.8-6.2-8.7.6-3.6,1.5-4.8l.4-.6c.7-.9.8-1-.1-2.7a35.4,35.4,0,0,0-4.8-7.3Z\" fill=\"#f68b3c\" />\r\n                                    </svg>\r\n                                </li>\r\n                                <li>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon\" viewBox=\"0 0 46.8 47.4\">\r\n                                        <path d=\"M35.8,47.4H11a11,11,0,0,1-11-11V11.6A11,11,0,0,1,11,.6h8.8a2,2,0,1,1,0,4H11a7,7,0,0,0-7,7V36.4a7,7,0,0,0,7,7H35.8a7,7,0,0,0,7-7v-9a2,2,0,1,1,4,0v9A11,11,0,0,1,35.8,47.4Z\" fill=\"#f68b3c\" />\r\n                                        <path d=\"M36.6,20.4A10.2,10.2,0,1,1,46.8,10.2,10.2,10.2,0,0,1,36.6,20.4ZM36.6,4a6.2,6.2,0,1,0,6.2,6.2A6.2,6.2,0,0,0,36.6,4Z\" fill=\"#f68b3c\" />\r\n                                    </svg>\r\n                                </li>\r\n                                <li className=\"chat__details d-flex d-xl-none\" onClick={showChatDetails}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon\" viewBox=\"0 0 42.2 11.1\">\r\n                                        <g>\r\n                                            <circle cx=\"5.6\" cy=\"5.6\" r=\"5.6\" fill=\"#d87232\" />\r\n                                            <circle cx=\"21.1\" cy=\"5.6\" r=\"5.6\" fill=\"#d87232\" />\r\n                                            <circle cx=\"36.6\" cy=\"5.6\" r=\"5.6\" fill=\"#d87232\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat__content pt-4 px-3\">\r\n                        {/* <div className=\"chat__time\">Yesterday at 16:43</div> */}\r\n                        <ul className=\"chat__list-messages\">\r\n                            {currentChatContact \r\n                                ? messages.map((message, index) => (\r\n                                    <li key={index}>\r\n                                        <div className={`chat__bubble ${message.from === currentUser.id ? 'chat__bubble--me' : 'chat__bubble--you'}`}>\r\n                                            {message.body}\r\n                                        </div>\r\n                                    </li>\r\n                                )) \r\n                                : <p style={{textAlign: 'center', marginTop: '30px'}}>Open a conversation</p>\r\n                            }               \r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"chat__send-container px-2 px-md-3 pt-1 pt-md-3\">\r\n                        <form className=\"custom-form__send-wrapper\" onSubmit={handleFormSubmit}>\r\n                            <input type=\"text\" className=\"form-control custom-form\" id=\"message\" placeholder=\"Send a message …\" autoComplete=\"off\" ref={messageRef}/>\r\n                            <div className=\"custom-form__send-img\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon svg-icon--send-img\" viewBox=\"0 0 45.7 45.7\">\r\n                                    <path d=\"M6.6,45.7A6.7,6.7,0,0,1,0,39.1V6.6A6.7,6.7,0,0,1,6.6,0H39.1a6.7,6.7,0,0,1,6.6,6.6V39.1h0a6.7,6.7,0,0,1-6.6,6.6ZM39,4H6.6A2.6,2.6,0,0,0,4,6.6V39.1a2.6,2.6,0,0,0,2.6,2.6H39.1a2.6,2.6,0,0,0,2.6-2.6V6.6A2.7,2.7,0,0,0,39,4Zm4.7,35.1Zm-4.6-.4H6.6a2.1,2.1,0,0,1-1.8-1.1,2,2,0,0,1,.3-2.1l8.1-10.4a1.8,1.8,0,0,1,1.5-.8,2.4,2.4,0,0,1,1.6.7l4.2,5.1,6.6-8.5a1.8,1.8,0,0,1,1.6-.8,1.8,1.8,0,0,1,1.5.8L40.7,35.5a2,2,0,0,1,.1,2.1A1.8,1.8,0,0,1,39.1,38.7Zm-17.2-4H35.1l-6.5-8.6-6.5,8.4C22,34.6,22,34.7,21.9,34.7Zm-11.2,0H19l-4.2-5.1Z\" fill=\"#f68b3c\" />\r\n                                </svg>\r\n                            </div>\r\n                            <div className=\"custom-form__send-emoji\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon svg-icon--send-emoji\" viewBox=\"0 0 46.2 46.2\">\r\n                                    <path d=\"M23.1,0A23.1,23.1,0,1,0,46.2,23.1,23.1,23.1,0,0,0,23.1,0Zm0,41.6A18.5,18.5,0,1,1,41.6,23.1,18.5,18.5,0,0,1,23.1,41.6Zm8.1-20.8a3.5,3.5,0,0,0,3.5-3.5,3.5,3.5,0,0,0-7,0,3.5,3.5,0,0,0,3.5,3.5ZM15,20.8a3.5,3.5,0,0,0,3.5-3.5A3.5,3.5,0,0,0,15,13.9a3.4,3.4,0,0,0-3.4,3.4A3.5,3.5,0,0,0,15,20.8Zm8.1,15a12.6,12.6,0,0,0,10.5-5.5,1.7,1.7,0,0,0-1.3-2.6H14a1.7,1.7,0,0,0-1.4,2.6A12.9,12.9,0,0,0,23.1,35.8Z\" fill=\"#f68b3c\" />\r\n                                </svg>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"custom-form__send-submit\"  onClick={send}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon svg-icon--send\" viewBox=\"0 0 45.6 45.6\">\r\n                                    <g>\r\n                                        <path d=\"M20.7,26.7a1.4,1.4,0,0,1-1.2-.6,1.6,1.6,0,0,1,0-2.4L42.6.5a1.8,1.8,0,0,1,2.5,0,1.8,1.8,0,0,1,0,2.5L21.9,26.1A1.6,1.6,0,0,1,20.7,26.7Z\" fill=\"#d87232\" />\r\n                                        <path d=\"M29.1,45.6a1.8,1.8,0,0,1-1.6-1L19.4,26.2,1,18.1a1.9,1.9,0,0,1-1-1.7,1.8,1.8,0,0,1,1.2-1.6L43.3.1a1.7,1.7,0,0,1,1.8.4,1.7,1.7,0,0,1,.4,1.8L30.8,44.4a1.8,1.8,0,0,1-1.6,1.2ZM6.5,16.7l14.9,6.6a2,2,0,0,1,.9.9l6.6,14.9L41,4.6Z\" fill=\"#d87232\" />\r\n                                    </g>\r\n                                </svg>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatContent\r\n","import React, {useEffect} from 'react'\r\nimport AddNewContact from './AddNewContact'\r\nimport ConversationsService from '../services/conversations.service'\r\n\r\nfunction ChatInfos({currentConversation, currentChatContact, showAddContactForm}) {\r\n\r\n    const closeUserProfile = () => {\r\n        const profile = document.querySelector('.user-profile');\r\n        profile.classList.remove('user-profile--show');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const profile = document.querySelector('.user-profile');\r\n        if(window.innerWidth <= 1200) profile.classList.add('user-profile--large'); \r\n        else profile.classList.remove('user-profile--large');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const profile = document.querySelector('.user-profile');\r\n            if(window.innerWidth <= 1200) profile.classList.add('user-profile--large'); \r\n            else profile.classList.remove('user-profile--large');\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n    })\r\n    \r\n    const deleteContact = () => {\r\n        ConversationsService.deleteConversation(currentConversation)\r\n            .then((resp) => {\r\n                window.location.reload(false);\r\n            })\r\n            .catch((err) => {alert('Could not delete conversation')})\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-5 col-lg-4 col-xl-3 px-4 px-sm-5 px-lg-4 user-profile user\" style={{display: 'block'}}>\r\n            <div className=\"user-profile__close d-flex d-xl-none\" onClick={closeUserProfile}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg-icon\" viewBox=\"0 0 38.8 38.9\">\r\n                    <g>\r\n                        <path d=\"M2,38.9a1.9,1.9,0,0,1-1.4-.5,2.1,2.1,0,0,1,0-2.9L35.4.6a1.9,1.9,0,0,1,2.8,0,1.9,1.9,0,0,1,0,2.8L3.4,38.4A1.9,1.9,0,0,1,2,38.9Z\" fill=\"#d87232\" />\r\n                        <path d=\"M36.8,38.9a1.9,1.9,0,0,1-1.4-.5L.6,3.4A1.9,1.9,0,0,1,.6.6,1.9,1.9,0,0,1,3.4.6L38.2,35.5a2.1,2.1,0,0,1,0,2.9A1.9,1.9,0,0,1,36.8,38.9Z\" fill=\"#d87232\" />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n            <div className=\"user-profile__wrapper\">\r\n                <div className=\"user-profile__avatar\">\r\n                    <img src={currentChatContact && currentChatContact.profilePicture ? currentChatContact.profilePicture : '/chat-app/avatar_placeholder.png'} alt={currentChatContact ? currentChatContact.username : 'image'} loading=\"lazy\"/>\r\n                </div>\r\n                <div className=\"user-profile__details mt-1\">\r\n                    <span className=\"user-profile__name\">{currentChatContact ? currentChatContact.username : 'John Doe'}</span>\r\n                    <span className=\"user-profile__phone\">(025) 015-234-567</span>\r\n                    <span className=\"user-profile__location\">New York, United States</span>\r\n                </div>\r\n                <div className=\"user-profile__description\">\r\n                    <p>Fly me to the moon 🌙 If you feel like your life is a routine, step back and take a deep breath.</p>\r\n                </div>\r\n                <div className=\"user-profile__learning mt-4\">\r\n                    <span className=\"user-profile__label\">Social Medias</span>\r\n                    <ul className=\"user-profile__tags user-profile__tags--primary mt-2\">\r\n                        {currentChatContact \r\n                            && currentChatContact.socialMedias \r\n                                ? currentChatContact.socialMedias.map(social => {\r\n                                    return <li key={social.name}><a href={social.link} target=\"_blank\">{social.name}</a></li>\r\n                                })\r\n                                : <li><a href='' target=\"_blank\">No social media added :(</a></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"user-profile__hobbies\">\r\n                    <span className=\"user-profile__label\">Activities</span>\r\n                    <ul className=\"user-profile__tags user-profile__tags--secondary mt-2\">\r\n                        {currentChatContact && currentChatContact.activities?.map((activity, index) => {\r\n                            return <li key={index}>{activity}</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <AddNewContact showAddContactForm={showAddContactForm}/>\r\n                {currentChatContact && <div style={{padding: '10px 30px', borderRadius: '20px', background:'tomato', color: '#fff', maxWidth: '200px', margin: '20px auto', cursor: 'pointer'}} onClick={deleteContact}>Delete Contact</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInfos\r\n","// react\r\nimport React, {useEffect, useRef, useState} from 'react'\r\n// components\r\nimport MessageList from './MessageList'\r\nimport ChatContent from './ChatContent'\r\nimport ChatInfos from './ChatInfos'\r\nimport UserService from '../services/auth.service';\r\n// redux \r\nimport { useSelector } from \"react-redux\";\r\n// sockets\r\nimport SockJS from 'sockjs-client'\r\nimport Stomp from 'stompjs';\r\n// router\r\nimport { Redirect } from 'react-router-dom';\r\n// styles\r\nimport '../styles/Chat.scss'\r\n// utils\r\n/* import {getQueryParam} from '../utils/utils'\r\nimport UserService from \"../services/user.service\"; */\r\nimport EventBus from \"../common/EventBus\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BASE_URL from '../utils/baseUrl';\r\n\r\nconst SOCKET_URL = BASE_URL + 'ws-message';\r\n\r\nfunction Chat() {\r\n\tconst { user: currentUser } = useSelector((state) => state.auth);\r\n\tlet history = useHistory();\r\n\tconst [status, setStatus] = useState('offline')\r\n\r\n\tconst CONNECTED_USER = {\r\n\t\tid: currentUser.id,\r\n        profilePicture: 'https://randomuser.me/api/portraits/thumb/men/2.jpg',\r\n        username: currentUser.username,\r\n        lastMessage: 'Yes, I need your help with the project, it need it done by tomorrow 😫',\r\n        status: status,\r\n        conversations: [\r\n            'stppvuuidjkel123'\r\n        ],\r\n        description: 'Fly me to the moon 🌙 If you feel like your life is a routine, step back and take a deep breath.',\r\n        socialMedias: [\r\n            {\r\n                name: 'Instagram',\r\n                link: '#'\r\n            },\r\n            {\r\n                name: 'Codepen',\r\n                link: '#'\r\n            },\r\n            {\r\n                name: 'Linkedin',\r\n                link: '#'\r\n            },\r\n        ],\r\n        activities: [\r\n            'Biking',\r\n            'Cooking',\r\n            'Travelling',\r\n            'Graphic Design'\r\n        ]\r\n\t}\r\n\r\n\tconst [currentConversation, setCurrentConversation] = useState(null);\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [contactForm, setContactForm] = useState(false);\r\n\tconst [onlineUsersIds, setOnlineUsersIds] = useState([]);\r\n\t\r\n\tconst ws = useRef(null);\r\n\tconst stomp = useRef(null);\r\n\t\r\n\tlet messagesSubscriptions = [];\r\n\tlet onlineUsersIds2 = []\r\n\tconst [currentChatContact, setCurrentChatContact] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t\tws.current = new SockJS(SOCKET_URL);\r\n\t\t\tstomp.current = Stomp.over(ws.current);\r\n\t\t\tstomp.current.reconnect_delay = 5000;\r\n\t\t\t\r\n\t\t\tstomp.current.connect({}, frame => {\r\n\t\t\t\tconst connectedUser = {\r\n\t\t\t\t\tuserId: currentUser.id\r\n\t\t\t\t}\r\n\t\t\t\tstomp.current.send(`/app/send/online-user`, {}, JSON.stringify(connectedUser));\r\n\t\t\t\tUserService.updateStatus(currentUser.id, 'online')\r\n\t\t\t\t.then((resp) => console.log(resp))\r\n\r\n\t\t\t\tlet onlineContactsSubscription = stomp.current.subscribe(`/topic/online-user`, connectAction => {\r\n\t\t\t\t\tsetOnlineUsersIds(onlineUsersIds => [...onlineUsersIds, connectAction.body]);\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet offlineContactsSubscription = stomp.current.subscribe(`/topic/disconnect-user`, disconnectAction => {\r\n\t\t\t\t\tconst users = onlineUsersIds.filter(onlineUser => onlineUser.id !== disconnectAction.body);\r\n\t\t\t\t\tsetOnlineUsersIds(users);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet newMessagesSubscription = stomp.current.subscribe(`/topic/${currentConversation}`, chatActions => {\r\n\t\t\t\t\tconst newMessage = JSON.parse(chatActions.body);\r\n\t\t\t\t\tsetMessages(messages => [...messages, newMessage]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmessagesSubscriptions.push(onlineContactsSubscription);\r\n\t\t\t\tmessagesSubscriptions.push(offlineContactsSubscription);\r\n\t\t\t\tmessagesSubscriptions.push(newMessagesSubscription);\r\n\t\t\t});\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tws.current.close();\r\n\t\t\t};\r\n\t}, [currentConversation])\r\n\r\n\tconst disconnect = () => {\r\n\t\tconst disconnectedUser = {\r\n\t\t\tuserId: currentUser.id\r\n\t\t}\r\n\t\tstomp.current.send(`/app/send/disconnect-user`, {}, JSON.stringify(disconnectedUser));\r\n\t\tstomp.current.disconnect(frame => {\r\n\t\t\tif(messagesSubscriptions) messagesSubscriptions.map(subscription => subscription.unsubscribe())\r\n\t\t}, {})\r\n\t}\r\n\r\n\t// disconnect user on page close\r\n\twindow.onbeforeunload = () => {\r\n\t\tdisconnect();\r\n\t}\r\n\r\n\t// Must come after useRef and useEffect !!\r\n\t/* if (!currentUser) {\r\n\t\treturn <Redirect to=\"/chat-app/login\" />;\r\n\t} */\r\n\r\n\tconst sendMessage = (message) => {\r\n\t\tstomp.current.send(`/app/send/${currentConversation}`, {}, JSON.stringify(message));\r\n\t}\r\n\r\n\tconst hideAddContactForm = () => {\r\n\t\tsetContactForm(false)\r\n\t}\r\n\r\n\tconst showAddContactForm = () => {\r\n\t\tsetContactForm(true)\r\n\t\t// hide user profile\r\n\t\tconst userProfile = document.querySelector('.user-profile');\r\n\t\tuserProfile.classList.remove('user-profile--show');\r\n\t\t// hide chat\r\n\t\tconst chat = document.querySelector('.chat');\r\n\t\tchat.classList.remove('chat--show');\r\n\t}\r\n\r\n    const logOut = () => {\r\n\t\tEventBus.dispatch(\"logout\");\r\n        history.push('/chat-app/');\r\n        window.location.reload();\r\n\t}\r\n\t\r\n    return (\r\n\t\t<div className=\"home-page__content messages-page\">\r\n\t\t\t<div className=\"container-fluid h-100\">\r\n\t\t\t\t<div className=\"row px-0 h-100\">\r\n\t\t\t\t\t<MessageList\r\n\t\t\t\t\t\tcurrentChatContact={currentChatContact}\r\n\t\t\t\t\t\tsetCurrentChatContact={setCurrentChatContact}\r\n\t\t\t\t\t\tcurrentUser={CONNECTED_USER}\r\n\t\t\t\t\t\tsetCurrentConversation={setCurrentConversation}\r\n\t\t\t\t\t\thideAddContactForm={hideAddContactForm}\r\n\t\t\t\t\t\tcontactForm={contactForm}\r\n\t\t\t\t\t\tshowAddContactForm={showAddContactForm}\r\n\t\t\t\t\t\tonlineUsersIds={onlineUsersIds}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ChatContent \r\n\t\t\t\t\t\tsendMessage={sendMessage}\r\n\t\t\t\t\t\tcurrentUser={CONNECTED_USER}\r\n\t\t\t\t\t\tcurrentChatContact={currentChatContact}\r\n\t\t\t\t\t\tmessages={messages}\r\n\t\t\t\t\t\tsetMessages={setMessages}\r\n\t\t\t\t\t\tcurrentConversation={currentConversation}\r\n\t\t\t\t\t\tlogOut={logOut}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ChatInfos\r\n\t\t\t\t\t\tcurrentChatContact={currentChatContact}\r\n\t\t\t\t\t\tshowAddContactForm={showAddContactForm}\r\n\t\t\t\t\t\tcurrentConversation={currentConversation}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst BoardUser = () => {\r\n  const [showChat, setShowChat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setShowChat(true);\r\n        console.log(response.data)\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n          setShowChat(false);\r\n          console.log(_content)\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        {showChat && <Chat/>}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default BoardUser;","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React from \"react\";\r\nimport { history } from '../helpers/history';\r\n\r\nconst parseJwt = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split(\".\")[1]));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst AuthVerify = (props) => {\r\n  history.listen(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user) {\r\n      const decodedJwt = parseJwt(user.accessToken);\r\n\r\n      if (decodedJwt.exp * 1000 < Date.now()) {\r\n        props.logOut();\r\n      }\r\n    }\r\n  });\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default AuthVerify;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\n/* import BoardModerator from \"./components/BoardModerator\";\r\nimport BoardAdmin from \"./components/BoardAdmin\"; */\r\n\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from \"./helpers/history\";\r\n\r\nimport AuthVerify from \"./common/AuthVerify\";\r\nimport EventBus from \"./common/EventBus\";\r\n/* import Navbar from \"./components/Navbar\"; */\r\n\r\nconst App = () => {\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  /* useEffect(() => {\r\n    history.push('/chat-app/login')\r\n  }, []) */\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const logOut = useCallback(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\r\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\r\n    } else {\r\n      setShowModeratorBoard(false);\r\n      setShowAdminBoard(false);\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      logOut();\r\n    });\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\");\r\n    };\r\n  }, [currentUser, logOut]);\r\n\r\n  return (\r\n      <Router history={history}>\r\n        <Switch>\r\n            {/* <Route exact path={[\"/chat-app/\", \"/chat-app/home\"]} component={Home} /> */}\r\n            <Route exact path={[\"/chat-app/\", \"/chat-app/login\"]} component={Login} />\r\n            <Route exact path=\"/chat-app/register\" component={Register} />\r\n            <Route exact path=\"/chat-app/profile\" component={Profile} />\r\n            <Route path=\"/chat-app/chat\" component={BoardUser} />\r\n          </Switch>\r\n        <AuthVerify logOut={logOut}/>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can chađinge\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}